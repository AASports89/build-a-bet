{"version":3,"sources":["utils/queries.js","components/GameList.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Signup.js","pages/Login.js","pages/SingleParlay.js","components/ParlayList.js","components/ParlayForm.js","pages/Dashboard.js","components/Navbar.js","components/Footer.js","pages/Parlays.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_USER","gql","QUERY_PARLAYS","QUERY_GAMES","QUERY_SINGLE_PARLAY","QUERY_ME","GameList","useQuery","loading","data","games","length","console","log","className","id","map","game","src","alt","awayTeam","awayOdd","homeTeam","homeOdd","_id","date","Date","toString","split","splice","join","document","write","Home","parlays","LOGIN_USER","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","useState","username","email","password","formState","setFormState","useMutation","addUser","error","handleChange","event","target","name","value","handleFormSubmit","preventDefault","variables","Auth","login","to","onSubmit","placeholder","type","onChange","rel","href","message","Login","props","style","cursor","SingleParlay","parlayId","useParams","parlayid","parlay","createdAt","ParlayList","title","Wins","Losses","showUsername","user","me","loggedIn","getProfile","fontSize","win_choice","ParlayForm","setPick","setHome","setAway","setHOdd","setAOdd","possibleWin","Math","floor","random","ticketId","handleSetPick","alert","for","Dashboard","Navbar","useEffect","Aos","init","duration","addEventListener","onClick","logout","Footer","year","getFullYear","useLocation","navigate","useNavigate","pathname","Parlays","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1690c706.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      parlays {\n        _id\n        name\n        win_choice\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const QUERY_PARLAYS = gql`\n  query getParlays {\n    parlays {\n      _id\n      name\n      win_choice\n      createdAt\n      games {\n        _id\n        homeTeam\n        awayTeam\n      }\n    }\n  }\n`;\n\nexport const QUERY_GAMES = gql`\n  query getGames {\n    games {\n      _id\n      homeTeam\n      awayTeam\n      homeOdd\n      awayOdd\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_PARLAY = gql`\n  query getSingleParlay($parlayId: ID!) {\n    parlay(parlayId: $parlayId) {\n      _id\n      name\n      win_choice\n      createdAt\n      games {\n        _id\n        homeTeam\n        awayTeam\n        homeOdd\n        awayOdd\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      parlays {\n        _id\n        name\n        win_choice\n        createdAt\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_GAMES } from '../utils/queries';\n\n\nconst GameList = () => {\n  const { loading, data } = useQuery(QUERY_GAMES);\n  const games = data?.games || [];\n  if (!games.length) {\n    return <h3>Where is the action❗❓</h3>;\n  }\nconsole.log(games);\n\n  return (\n      <div>\n      {loading ? ( \n        <div>Loading...💸...</div> \n      ) : (\n//************************* GAME-INFO: TEAMS & ODDS ******************//\n         <div className=\"flex-row my-4\" id=\"gaming\">\n          {games && games.map((game) => (\n            <div key={game._id} className=\"card mb-3\" id=\"game-card\">\n               <div className=\"p-3 text-light\" id=\"game-card\">\n                <div id=\"game-cardss\">\n                <p><img id=\"team\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667007982/away_m9lnn0.png\" alt=\"Away\"></img></p>\n                  <p className=\"card-body\">{game.awayTeam}</p>\n                  <p className=\"card-body\">Odds: ({game.awayOdd})</p>\n                </div>\n                  <p id=\"vs\"><img src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667008346/vs1_mwfonr.png\" alt=\"VS\"></img></p>\n                <div id=\"game-cards\">\n                <p><img id=\"team\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667007982/home_qpmug9.png\" alt=\"Home\"></img></p>\n                  <p className=\"card-body\">Home: {game.homeTeam}</p>\n                  <p className=\"card-body\">Odds: ({game.homeOdd})</p>  \n                </div>\n              </div>\n              </div>\n          ))}\n          </div>\n      )}\n      </div>\n  );\n          };\nexport default GameList;","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport GameList from '../components/GameList';\n// import ParlayList from '../components/ParlayList';\n\nimport { QUERY_PARLAYS } from '../utils/queries';\n\nvar date = (new Date()).toString().split(' ').splice(1,3).join(' ');\ndocument.write(date);\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_PARLAYS);\n  const parlays = data?.parlays || [];\n\n  return (\n    <main> \n      <div className=\"flex-row justify-center\">\n      <h5 id=\"list-title\">\n                  Scheduled 🏈 Games: {date} 📋\n                </h5>\n          <GameList />\n        </div>\n      {/* <div className=\"flex-row justify-center\">\n        {loading ? (\n          <div>Loading...💸...</div>\n          ) : (\n        <ParlayList \n        parlays={parlays}\n        title=\"Winner...Winner 💰...Chicken...Dinner 🐔\"\n        />\n        )}\n        </div> */}\n    </main>\n  );\n};\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_PARLAY = gql`\n  mutation addParlay($parlayId: ID!) {\n    addParlay(parlayId: $parlayId) {\n      _id\n      win_choice\n      createdAt\n       game {\n        _id\n        homeTeam\n        awayTeam\n        homeOdd\n        awayOdd\n      }\n    }\n  }\n`;\n\nexport const ADD_GAME = gql`\n  mutation addGame ($parlayId: ID!, $homeTeam: String!, $awayTeam: String!, $homeOdd: Int!, $awayOdd: Int!) {\n    addGame(parlayId: $parlayId, homeTeam: $homeTeam, awayTeam: $awayTeam, homeOdd: $homeOdd, awayOdd: $awayOdd) {\n      games {\n        _id\n        homeTeam\n        awayTeam\n        homeOdd\n        awayOdd\n      }\n    }\n  }\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center\">\n      <div className=\"col\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up 🎰</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <button className='btn' id=\"btn1\">\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </button>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                 <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" />\n                 <script src=\"https://upload-widget.cloudinary.com/global/all.js\" type=\"text/javascript\"></script>\n  \n                {/* <input className='form-input'\n                    name=\"image\"\n                    type=\"url\"\n                    value={formState.image}\n                    onChange={handleChange}/>\n                <div id=\"inline_container\"></div> */}\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button id=\"btn1\"\n                  className=\"btn\"\n                  type=\"submit\"\n                >\n                  Submit 📬\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\" id=\"log\">\n          <h4 id=\"login\" className=\"card-header\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit 📬\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport GameList from '../components/GameList';\n\n\nimport { QUERY_SINGLE_PARLAY } from '../utils/queries';\n\nconst SingleParlay = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { parlayId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_PARLAY, {\n    // pass URL parameter\n    variables: { parlayid: parlayId },\n  });\n\n  const parlay = data?.parlay || {};\n\n  if (loading) {\n    return <div>💸...💸</div>;\n  }\n  return (\n    <div className=\"my-3\" id=\"single-parlay\">\n      <h3 className=\"card-header bg-dark text-light\" id=\"single-header\">\n        {parlay.username} <br />\n          had this pick on {parlay.createdAt}\n      </h3>\n      <div className=\"bg-light py-4\">\n        <blockquote\n          className=\"p-4\" id=\"blockquote\"\n        >\n          {parlay.name}\n        </blockquote>\n      </div>\n\n      <div className=\"my-5\">\n        <GameList games={parlay.games} />\n      </div>\n      {/* <div className=\"m-3 p-4\" style={{ border: '2px solid #1a1a1a' }}>\n        <GameForm parlayId={parlay._id} />\n      </div> */}\n    </div>\n  );\n};\n\nexport default SingleParlay;","import React from 'react';\nimport { Navigate, useParams, Link } from 'react-router-dom';\nimport {  useQuery } from '@apollo/client';\nimport { QUERY_PARLAYS, QUERY_ME, QUERY_USER } from '../utils/queries';\nimport Auth from '../utils/auth';\n// import ParlayForm from './ParlayForm';\n\nconst ParlayList = ({\n  parlays,\n  title,\n  Wins,\n  Losses,\n  showUsername = true,\n}) => {\n  const { username } = useParams();\nconst { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, QUERY_PARLAYS, {\n      variables: { username: username },\n    });\n  \n    const user = data?.me || data?.user || {};\n\n    if (Auth.loggedIn() && Auth.getProfile().data.username === username) {\n      return <Navigate to=\"/parlays\"/>;\n    }\n  \n    if (loading) {\n      return <div>Loading...💸...</div>;\n    }\n  \n    if (!user?.username) {\n      return (\n        <h4 id=\"title-list\">\n            Login in to play❗⛔ Click on the links above to\n          Sign Up 🎰  or Log In 📡 ❗⛔\n        </h4>\n      );\n    }\n  \n  // if (!parlays.length) {\n  //   return <h3>Where are the picks❗❓</h3>;\n  // }\n\n  return (\n  \n    <div className='row' id=\"parlay-row\">\n       <h5 id=\"user-title\">\n        {`${user.username}'s Picks`}\n        <p id=\"totals\">TOTALS</p>\n        <p id=\"wins\">Winnings: {Wins=\"+$3,200.00\"}</p>\n        <p id=\"losses\">Losses: {Losses=\"-$1,650.00\"}</p>\n          <p>{title=\"Winner...Winner 💰...Chicken...Dinner 🐔\"}</p> \n      </h5>\n      <main className=\"flex-row justify-center\" id=\"action\">\n      {parlays &&\n        parlays.map((parlay) => (\n          <div key={parlay._id} className=\"card mb-3\" id=\"user-parlays\">\n            <h4 className=\"card-header\" id=\"single-header\">\n              {showUsername ? (\n               <p>\n                <Link\n                  className=\"text-light\" to={`/profiles/${parlay.username}`}>\n                 <span style={{ fontSize: '2rem' }}>\n                 {parlay.name}\n                 <p  style={{ fontSize: '1.5rem' }}>Ticket Code: [{parlay.win_choice}]</p>\n                <br/> \n                 </span>\n                  <span style={{ fontSize: '1rem' }}>\n                    Picked On: {parlay.createdAt}\n                  </span>\n                </Link>\n               </p> \n              ) : (\n                <>\n                  <span style={{ fontSize: '1rem' }}>\n                    You had this pick {parlay.createdAt}\n                  </span>\n               \n                </>\n              )}\n            </h4>\n          </div>\n        ))}\n    </main>\n    </div>\n  );\n};\n\nexport default ParlayList;","import React, { useState } from 'react';\nimport { Navigate, useParams, Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_PARLAYS, QUERY_ME, QUERY_USER } from '../utils/queries';\n\nfunction ParlayForm() {\n  \n  const [name, setPick] = useState('');\n  const [homeTeam, setHome] = useState(' ');\n  const [awayTeam, setAway] = useState(' ');\n  const [homeOdd, setHOdd] = useState(' ');\n  const [awayOdd, setAOdd] = useState(' ');\n  const [game, setGame] = useState(' ');\n  \n  const { username, user } = useParams();\n  const { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, QUERY_PARLAYS, {\n        variables: { username: username },\n      });\n  const parlay = data?.parlay || [];\n  const games = data?.games || [];\n \nconsole.log(parlay, games);\n\nconst possibleWin = Math.floor(Math.random() * (99 - 70 + 1) + 235.8);\nconst ticketId = Math.floor(Math.random() * (15005) + 1);\n\n  if (loading) {\n    return <div>Loading...💸...</div>;\n  }\n    const handleSetPick = event => {\n      setPick(event.target.value)\n    };\n    const handleSetGame = event => {\n      setGame(event.target.value)\n    };\n    const handleSetHome = event => {\n      setHome(event.target.value)\n    };\n    const handleSetAway = event => {\n      setAway(event.target.value)\n    };\n    const handleSetHOdd = event => {\n      setHOdd(event.target.value)\n    };\n    const handleSetAOdd = event => {\n      setAOdd(event.target.value)\n    };\n  const handleSubmit = event => {\n    event.preventDefault();\n    alert(`Parlay picks, successfully submitted✅ Good Luck!💰\n            YOUR CURRENT PARLAY TICKET: ID ${ticketId} \\n \n            Parlay Code: ${name} \\n\n            1st Pick: ${homeTeam} \\n\n            2nd Pick: ${awayTeam} \\n\n            3rd Pick: ${homeOdd} \\n\n            4th Pick: ${awayOdd} \\n\n            Possible Winnings: ${possibleWin} \\n\n            `);\n  };\n  return (\n    <form onSubmit={handleSubmit} className=\"flex-row justify-center\" id=\"form\">\n      <div>\n        <label id=\"label\">Check The Parlay Randomizer (Optional):</label>\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[0,1,0,1]}\n        />\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[0,1]}\n        />\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[0,1,0]}\n        />\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[0,0,1]}\n        />\n        <input\n          type=\"checkbox\"\n          name=\"name\"\n          onChange={handleSetPick}\n          value={[1,1,0]}\n        />\n        <label id=\"label\" for={name}>{name}</label>\n      </div>\n      <div>\n        <label id=\"label\">Select 1 OR More Odds Choices:</label>\n        <input\n          type=\"checkbox\"\n          name=\"homeTeam\"\n          onChange={handleSetHome}\n          value={[homeTeam -150]}\n        />\n        <label id=\"label\" for={homeTeam}>{homeTeam}</label>\n        <label id=\"label\"></label>\n        <input\n          type=\"checkbox\"\n          name=\"awayTeam\"\n          onChange={handleSetAway}\n          value={[awayTeam +200]}\n        />\n         <label id=\"label\" for={awayTeam}>{awayTeam}</label>\n        <input\n          type=\"checkbox\"\n          name=\"homeOdd\"\n          onChange={handleSetHOdd}\n          value={[homeOdd -1.5]}\n        />\n        <label id=\"label\" for={homeOdd}>{homeOdd}</label>\n        <input\n          type=\"checkbox\"\n          name=\"awayOdd\"\n          onChange={handleSetAOdd}\n          value={[awayOdd +3.5]}\n        />\n        <label id=\"label\" for={awayOdd}>{awayOdd}</label>\n      </div>\n      <button className='btn' type=\"submit\">\n            Add Parlay 💸\n      </button>\n    </form>\n  )\n}\nexport default ParlayForm;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport ParlayList from '../components/ParlayList';\nimport ParlayForm from '../components/ParlayForm';\nimport { QUERY_PARLAYS } from '../utils/queries';\n\nconst Dashboard = () => {\n  const { loading, data } = useQuery(QUERY_PARLAYS);\n  const parlays = data?.parlays || [];\n \n    if (loading) {\n      return <div>Loading...💸...</div>;\n    }\n\n\n  return (\n  <main>\n      <div className=\"flex-row justify-center\">\n      <div id=\"parlay-form\"\n            className=\"col-12 col-md-10 mb-3 p-3\"\n          >\n            <ParlayForm />\n          </div>\n      <div className=\"flex-row justify-center\">\n        {loading ? (\n          <div>Loading...💸...</div>\n          ) : (\n        <ParlayList \n        parlays={parlays}\n        title=\"Winner...Winner 💰...Chicken...Dinner 🐔\"\n        />\n        \n        )}\n        </div>\n        </div>\n  </main>\n     \n\n  );\n};\n\nexport default Dashboard;\n","import React, {useEffect} from \"react\";\nimport { Link } from 'react-router-dom';\nimport Aos from \"aos\";\n\nimport Auth from '../utils/auth';\n\nconst Navbar = () => {\n  useEffect(() => {\n\t\tAos.init({duration:2000});\n\t\twindow.addEventListener(\"scroll\", () => {\n\t\t});\n\t}, [])\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n      <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <h1 id=\"main-title\"> 🏈⚽<img id=\"parlay\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1667008558/cooltext422338805357325_qvpd09.png\" alt=\"Parlay Anytime\"></img>🏀⚾ </h1>\n        <Link className=\"text-light\" to=\"/\">\n            <h1 id=\"title\"><img id=\"build\" src=\"https://res.cloudinary.com/dhqsixgmo/image/upload/v1666898132/cooltext422262976759629_qb9ewg.png\" alt=\"Build A Bet\"></img>🎲</h1>\n          </Link>\n          <div className=\"row\" id=\"links\">\n          {Auth.loggedIn() ? (\n            <>\n            <Link className=\"btn\" to=\"/me\">\n                {Auth.getProfile().data.username}'s Dashboard 🎛️\n            </Link>\n              <Link to=\"/parlays\">\n              <button className=\"btn\" to=\"/parlays\">\n              Parlays 🤑\n            </button>\n              </Link>\n            <button className=\"btn\" onClick={logout}>\n                Logout 📴\n            </button>\n              {/* <div id=\"user-image\" className=\"card-img-top\"><img src={image.user} alt=\"profile\"></img></div> */}\n            </>\n          ) : (\n            <>\n            <Link className=\"btn\" to=\"/\">\n                Games 🏟️\n            </Link>\n          \n            <Link className=\"btn\" to=\"/login\">\n                Login 📡\n            </Link>\n            \n            <Link className=\"btn\" to=\"/signup\">\n                Sign Up 🎰\n            </Link>\n            </>\n          )}\n          </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const year = new Date().getFullYear();\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer id=\"footer\" className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button id=\"back\" className=\"btn\"\n            onClick={() => navigate(-1)}\n          >\n            ⬅️ Go Back \n          </button>\n        )}\n        <h4 id=\"foot-title\">\n          Made with{' '}\n            🎲\n          {' '}\n          <strong> Da Parlay Makers &copy; {year} </strong>\n            <div className=\"col-12 col-sm-12 col-md-8 mx-auto\">\n            <a\n\t\t\t\t\t\t\t\tclassName=\"px-3\"\n\t\t\t\t\t\t\t\thref=\"https://github.com/AASports89/build-a-bet\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t<img id=\"github\" src='https://res.cloudinary.com/dhqsixgmo/image/upload/v1666484175/public/images/github-icon_mvuylu.png' alt=\"github icon\"/>\n\t\t\t\t\t\t\t</a>\n            </div>\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_PARLAYS } from '../utils/queries';\n\nvar date = (new Date()).toString().split(' ').splice(1,3).join(' ');\ndocument.write(date);\n\nconst Parlays = () => {\n\n  const { loading, data } = useQuery(QUERY_PARLAYS);\n  const parlays = data?.parlays || [];\n  if (!parlays.length) {\n    return <h3>Where is the action❗❓</h3>;\n  }\nconsole.log(parlays);\n\n// const { username } = useParams();\n// const { loading, data } = useQuery(username ? QUERY_USER : QUERY_ME, QUERY_PARLAYS, {\n//       variables: { username: username },\n//     });\n  \n    // const user = data?.me || data?.user || {};\n    \n    // if (Auth.loggedIn() && Auth.getProfile().data.username === username) {\n    //   return <Navigate to=\"/parlays\"/>;\n    // }\n  \n    // if (loading) {\n    //   return <div>Loading...💸...</div>;\n    // }\n  \n    // if (!user?.username) {\n    //   return (\n    //     <h4>\n    //         Login in to play❗⛔ Click on the links above to\n    //       Sign Up 🎰  or Log In 📡 ❗⛔\n    //     </h4>\n    //   );\n    // }\n  \n    // return (\n      return (\n        <div>\n        {loading ? ( \n          <div>Loading...💸...</div> \n        ) : (\n      //************************* PARLAY-INFO: NAME & WIN_CHOICE ******************//\n      \n      <div className=\"flex-row justify-center\" id=\"parlaying\">\n        <div className=\"flex-row justify-center\">\n          <h5 id=\"par-title\">\n          Parlays for: {date} 📋\n          </h5>\n          </div>\n        {parlays && parlays.map((parlay) => (\n        <div key={parlay._id} className=\"card mb-3\" id=\"game-cardss\">\n              <p className=\"card-body\">{parlay.name}</p>\n              <p className=\"card-body\"> Ticket Code: [{parlay.win_choice}]</p>\n              {parlay.games && parlay.games.map((game)=> (\n                <div key={game._id}>\n                  <p>{game.homeTeam} vs {game.awayTeam}</p>\n                </div>\n              ))}\n            </div>\n      ))}\n      </div>\n  )};\n    </div>\n  );\n          };\n      {/* <div>\n        <div className=\"flex-row justify-center\" id=\"action-div\">\n          <h2 className=\"col-12 col-md-10 mb-3 p-3\" id=\"parlay-title\">\n            Welcome! {Auth.getProfile().data.username}: Dashboard 🎛️\n          </h2>\n  \n              <div className=\"col-12 col-md-10 mb-5\">\n                <ParlayList\n              parlays={user.parlays}\n              title={`${user.username}'s picks...`}\n              showTitle={false}\n              showUsername={false}\n            />\n          </div>\n          {!username && (\n            <div\n              className=\"col-12 col-md-10 mb-3 p-3\"\n              style={{ border: '1px dotted #1a1a1a' }}\n            >\n              <ParlayForm />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }; */}\n  \n  export default Parlays;\n  ","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleParlay from './pages/SingleParlay';\nimport Dashboard from './pages/Dashboard';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport GameList from './components/GameList';\nimport Parlays from './pages/Parlays';\nimport ParlayForm from './components/ParlayForm';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n      <header>\n      <Navbar />\n      </header>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <div className=\"container\">\n            <Routes>\n           \n              <Route \n                path=\"/\"\n                element={<Home />}\n              />\n               <Route \n                path=\"/\" \n                element={<GameList />}\n              />\n              <Route \n                path=\"/ParlayFrom\" \n                element={<ParlayForm />}\n              />\n              <Route \n                path=\"/parlays\" \n                element={<Parlays />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n              <Route \n                path=\"/me\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/profiles/:username\" \n                element={<Dashboard />}\n              />\n              <Route \n                path=\"/parlays/:parlayId\" \n                element={<SingleParlay />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}